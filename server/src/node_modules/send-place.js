"use strict"

const _ = require("lodash")

module.exports = function sendPlace(response, place) {
  response.set("Content-Language", "fr")
  response.format({
    "text/plain": () => response.render("place.mustache", place),
    "text/html": () => response.render("place.jade", place),
    "application/json": () => json(response, place),
    "application/vnd.siren+json": () => siren(response, place),
    "application/x.star+json": () => siren(response, place, 1),
    "application/x.star+json;version=1": () => siren(response, place, 1),
    "application/x.star+json;version=2": () => siren(response, place, 2),
    "default": () => response.status(406).send("Not Acceptable")
  })
}

function json(response, place) {
  const actions = {actions: _.map(place.actions, action => _.pick(action, "name", "description", "method", "href", "type", "fields"))}
  const jsonPlace = _.assign(actions, _.pick(place, "title", "description", "clue"))
  response.send(jsonPlace)
}

function siren(response, {title, description, clue, links, actions}, version) {
  const sirenPlace = {
    class: ["place"],
    properties: {title, description, clue: version >= 2 ? clue : undefined},
    actions: _.map(_.filter(actions, action => !action.hidden), ({name, description, href, method, type, fields}) => ({
      name,
      title: description,
      href,
      method,
      type,
      fields
    })),
    links: _.map(_.filter(links, link => !link.hidden), ({description, href, rel}) => ({
      rel: rel || [],
      title: description,
      href
    }))
  }
  const linkHeader = _.transform(links, (linkHeaderObject, link) => linkHeaderObject[link.rel[0]] = link.href, {})
  response.links(linkHeader).send(sirenPlace)
}

module.exports.location = function sendLocation(response, location) {
  const place = {
    title: "",
    description: "",
    location: location
  }
  module.exports(response, place)
}
