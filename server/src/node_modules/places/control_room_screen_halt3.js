"use strict"

const _ = require("lodash")
const persistence = require("persistence")
const sendPlace = require("send-place")
const controlRoomScreen = require("places/control_room_screen")
const controlRoomHaltOk = require("places/control_room_screen_halt_ok")

const goodAction = {
  "href": "control_room_screen_halt_ok",
  "handler": handler,
  "returnedLocation": "shutdown_progress"
}

module.exports = {
  "title": "Console de contrôle",
  "description": "Permission denied.",
  "links": [
    controlRoomScreen.links[0]
  ],
  "actions": [
    {
      "name": "type_sudo_halt",
      "description": "Taper \"sudo halt\"",
      "href": "control_room_screen_halt2"
    },
    _.assign({name: "type_sudo_hqlt", description: "Taper \"sudo hqlt\""}, goodAction),
    _.assign({name: "type_fuck", description: "Taper \"fuck\""}, goodAction),
    {
      "name": "smash_screen",
      "description": "Frapper l'écran avec le clavier",
      "href": "control_room_screen_smash"
    }
  ]
}

function handler(place, action, request, response) {
  persistence.with("control_room", function(controlRoom) {
    controlRoom.description = controlRoom.descriptionAfterShutdown
    controlRoom.links[0].hidden = true
    controlRoom.links[3].hidden = false
  })
  const shutdownStartTime = process.uptime()
  const timer = setInterval(function() {
    persistence.with("shutdown_progress", function(shutdownProgress) {
      const remaining = shutdownProgress.countdown - (process.uptime() - shutdownStartTime)
      shutdownProgress.remaining = remaining
      // console.log("before", shutdownProgress.description)
      shutdownProgress.description = controlRoomHaltOk.description.replace(shutdownProgress.countdown.toString(), remaining.toFixed(0))
      // console.log("after", shutdownProgress.description)
      if (remaining <= 0) return clearInterval(timer)
    })
  }, 1000)
  response.status(202).location(action.returnedLocation)
  persistence.with("control_room_screen_halt_ok", function(controlRoomHaltOk) {
    sendPlace(response, controlRoomHaltOk)
  })
}
